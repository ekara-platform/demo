name: ekara-demo
qualifier: dev

ekara:
  distribution:
    repository: https://github.com/ekara-platform/distribution
    ref: master
  components:
    visualizer:
      repository: ekara-platform/swarm-visualizer
      ref: master

orchestrator:
  component: ek-swarm

providers:
  aws:
    component: ek-aws
    params:
      region: {{ .aws.region }}
      instance_type: "t2.micro"
      ami_id: "ami-f90a4880"
      vpc_id: "vpc-880aeaef"

nodes:
  managers:
    instances: 3
    provider:
      name: aws
      params:
        security_groups:
          - name: group1
            rules:
              - proto: tcp
                ports:
                  - 22
                cidr_ip: 0.0.0.0/0
                rule_desc: allow all on port 22
          - name: group2
            rules:
              - proto: tcp
                ports:
                  - 80
                cidr_ip: 0.0.0.0/0
                rule_desc: allow all on port 80
              - proto: tcp
                ports:
                  - 8080
                cidr_ip: 0.0.0.0/0
                rule_desc: allow all on port 8080
              - proto: tcp
                ports:
                  - 8090 #ekara api
                cidr_ip: 0.0.0.0/0
                rule_desc: allow all on port 8090
              - proto: tcp
                ports:
                  - 8500 #ekara consul
                cidr_ip: 0.0.0.0/0
                rule_desc: allow all on port 8500
          - name: swarm
            rules:
              - proto: tcp
                ports:
                  - 2377
                cidr_ip: 0.0.0.0/0
                rule_desc: cluster management communications
              - proto: tcp
                ports:
                  - 7946
                cidr_ip: 0.0.0.0/0
                rule_desc: communication among nodes
              - proto: udp
                ports:
                  - 7946
                cidr_ip: 0.0.0.0/0
                rule_desc: communication among nodes
              - proto: udp
                ports:
                  - 4789
                cidr_ip: 0.0.0.0/0
                rule_desc: overlay network traffic
    volumes:
      - path: /data1
        params:
          device_name: xvdf
          volume_type: gp2
          volume_size: 9
          delete_on_termination: true
      - path: /var/lib/docker
        params:
          device_name: xvdg
          volume_type: standard
          volume_size: 1
          delete_on_termination: true
          tags:
            Type: Docker
            TestTagKey: TestTagValue

  workers:
    instances: 4
    provider:
      name: aws
    volumes:
      - path: /data1
        params:
          device_name: xvdf
          volume_type: gp2
          volume_size: 9
          delete_on_termination: true
      - path: /var/lib/docker
        params:
          device_name: xvdg
          volume_type: standard
          volume_size: 1
          delete_on_termination: true
          tags:
            Type: Docker
            TestTagKey: TestTagValue

stacks:
  visualizer:
    component: visualizer
